{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "extends": [
    "airbnb",
    "prettier",
    "plugin:react/recommended",
    "plugin:css-modules/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 6,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "prettier",
    "react",
    "css-modules",
    "react-hooks",
    "import",
    "jsx-a11y",
    "@typescript-eslint"
  ],
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "paths": ["src"],
        "extensions": [".js", ".jsx", ".ts", ".tsx", ".css", ".scss"]
      }
    }
  },
  "rules": {
    "no-new": "off",
    "no-console": ["warn", { "allow": ["warn", "info", "error"] }],
    "func-names": "off",
    "no-plusplus": "off",
    "prefer-const": "error",
    "class-methods-use-this": "off",
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": "*", "next": "if" },
      { "blankLine": "always", "prev": "*", "next": "export" },
      { "blankLine": "always", "prev": "*", "next": "try" }
    ],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-unnecessary-type-assertion": "off",
    "@typescript-eslint/class-name-casing": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-floating-promises": "off",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-filename-extension": [2, { "extensions": [".js", ".jsx", ".ts", ".tsx"] }],
    "react-hooks/rules-of-hooks": "warn",
    "react-hooks/exhaustive-deps": "off",
    "react/prop-types": 0,
    "default-param-last": 0,
    "@typescript-eslint/default-param-last": "off",
    "react/require-default-props": "off",
    "react/jsx-curly-brace-presence": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-no-target-blank": "off",
    "import/no-extraneous-dependencies": ["warn", { "devDependencies": true }],
    "import/prefer-default-export": 0,
    "import/first": "off",
    "import/extensions": "off",
    "import/no-cycle": 0,
    "import/order": [
      "error",
      {
        "groups": ["builtin", "external", "internal"],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "{.,..}/**/*.scss",
            "group": "object",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": ["react"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "jsx-a11y/href-no-hash": "off",
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/control-has-associated-label": "off",
    "jsx-a11y/label-has-associated-control": "warn",
    "css-modules/no-unused-class": "warn",
    // Фиксы из официальной документации
    "no-shadow": "off",
    "no-use-before-define": "off",
    "no-unused-vars": "off",
    "camelcase": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "leadingUnderscore": "allow",
        "format": ["camelCase", "PascalCase"]
      },
      {
        "selector": ["variable", "enumMember"],
        "format": ["camelCase", "PascalCase", "UPPER_CASE"]
      },

      { "selector": "typeLike", "format": ["PascalCase", "UPPER_CASE"] },
      {
        "selector": ["property", "typeParameter"],
        "format": null
      },
      {
        "selector": ["variable", "variableLike"],
        "modifiers": ["destructured"],
        "format": null
      }
    ],
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-use-before-define": ["error"],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      { "vars": "all", "args": "after-used", "ignoreRestSiblings": false }
    ]
  }
}
